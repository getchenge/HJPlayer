import EventEmitter from 'eventemitter3';
import BaseLoaderInterface from '../Interfaces/BaseLoader';
import SeekRange from '../Interfaces/SeekRange';
import MediaConfig from '../Interfaces/MediaConfig';
declare class BaseLoader implements BaseLoaderInterface {
    Tag: string;
    supportType: string;
    _type: string;
    _needStash: boolean;
    _onContentLengthKnown: Function | null;
    _onDataArrival: Function | null;
    _onError: Function | null;
    _onComplete: Function | null;
    _status: number;
    _onURLRedirect: Function | null;
    eventEmitter: EventEmitter;
    constructor(type: string, supportType: string);
    on(eventName: string, callback: EventEmitter.ListenerFn): void;
    once(eventName: string, callback: EventEmitter.ListenerFn): void;
    off(eventName: string, callback?: EventEmitter.ListenerFn): void;
    destroy(): void;
    isWorking(): boolean;
    get type(): string;
    get status(): number;
    get needStashBuffer(): boolean;
    get onContentLengthKnown(): Function | null;
    set onContentLengthKnown(callback: Function | null);
    get onURLRedirect(): Function | null;
    set onURLRedirect(callback: Function | null);
    get onDataArrival(): Function | null;
    set onDataArrival(callback: Function | null);
    get onError(): Function | null;
    set onError(callback: Function | null);
    get onComplete(): Function | null;
    set onComplete(callback: Function | null);
    startLoad(mediaConfig: MediaConfig, range: SeekRange): void;
    abort(): void;
}
export default BaseLoader;
