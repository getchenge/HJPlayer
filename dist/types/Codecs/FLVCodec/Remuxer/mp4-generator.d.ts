import { track } from '../Interface';
declare class MP4 {
    static types: Record<string, Array<number>>;
    static HDLR_TYPES: Record<string, Uint8Array>;
    static STTS: Uint8Array;
    static STSC: Uint8Array;
    static STCO: Uint8Array;
    static STSZ: Uint8Array;
    static VMHD: Uint8Array;
    static SMHD: Uint8Array;
    static STSD: Uint8Array;
    static FTYP: Uint8Array;
    static DINF: Uint8Array;
    static STSD_PREFIX: Uint8Array;
    static HDLR_VIDEO: Uint8Array;
    static HDLR_AUDIO: Uint8Array;
    static DREF: Uint8Array;
    static init(): void;
    static box(type: Array<number>, ...args: Array<Uint8Array>): Uint8Array;
    static generateInitSegment(meta: track): Uint8Array;
    static moov(meta: track): Uint8Array;
    static mvhd(timescale: number, duration?: number): Uint8Array;
    static trak(meta: track): Uint8Array;
    static tkhd(meta: track): Uint8Array;
    static mdia(meta: track): Uint8Array;
    static mdhd(meta: track): Uint8Array;
    static hdlr(meta: track): Uint8Array;
    static minf(meta: track): Uint8Array;
    static dinf(): Uint8Array;
    static stbl(meta: track): Uint8Array;
    static stsd(meta: track): Uint8Array;
    static mp3(meta: track): Uint8Array;
    static mp4a(meta: track): Uint8Array;
    static esds(meta: track): Uint8Array;
    static avc1(meta: track): Uint8Array;
    static mvex(meta: track): Uint8Array;
    static trex(meta: track): Uint8Array;
    static moof(track: track, baseMediaDecodeTime: number): Uint8Array;
    static mfhd(sequenceNumber: number): Uint8Array;
    static traf(track: track, baseMediaDecodeTime: number): Uint8Array;
    static sdtp(track: track): Uint8Array;
    static trun(track: track, offset: number): Uint8Array;
    static mdat(data: any): Uint8Array;
}
export default MP4;
